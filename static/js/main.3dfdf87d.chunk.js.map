{"version":3,"sources":["api/axios.js","Pages/AuthPage/LoginPage.js","Pages/AuthPage/RegisterPage.js","hooks/useAuth.js","Pages/Dashboard/Dashboard.js","Pages/Dashboard/CreatePaymentPage.js","Pages/Dashboard/ProfilePage.js","Pages/PaymentPage/PaymentPage.js","Pages/PaymentPage/ThankYou.js","Pages/ErrorPages/NotFound.js","Pages/PaymentPage/PaymentPageTransactions.js","Pages/Dashboard/EarningsPage.js","App.js","index.js"],"names":["axiosInstance","axios","create","baseURL","headers","LoginPage","email","setEmail","useState","password","setPassword","error","setError","navigate","useNavigate","React","createElement","Container","component","maxWidth","sx","height","display","flexDirection","justifyContent","alignItems","color","fontFamily","Box","width","xs","sm","margin","Typography","variant","align","mb","onSubmit","async","e","preventDefault","response","post","status","Error","message","localStorage","setItem","data","jwtToken","console","log","getItem","refreshToken","err","_err$response","_err$response$data","style","TextField","label","type","value","onChange","target","fullWidth","required","Button","mt","bgcolor","marginTop","Link","RouterLink","to","marginBottom","RegisterPage","confirmPassword","setConfirmPassword","displayName","setDisplayName","verificationCode","setVerificationCode","generatedCode","setGeneratedCode","isDialogOpen","setIsDialogOpen","isLoading","setIsLoading","test","VerificationCode","name","disabled","CircularProgress","size","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","onClick","passwordHash","loginResponse","concat","_err$response2","_err$response2$data","useAuth","auth","setAuth","accessToken","userId","useEffect","token","isValid","userResponse","get","Authorization","id","refreshError","removeItem","verifyToken","Navigation","_ref","handleLogout","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","AppBar","position","Toolbar","flexGrow","mx","m","Dashboard","paymentPages","setPaymentPages","setOpen","deleteId","setDeleteId","getUserresponse","fetchPaymentPages","handleClose","minHeight","py","length","textAlign","overflowX","Table","minWidth","borderRadius","TableHead","TableRow","TableCell","TableBody","map","page","key","title","whiteSpace","overflow","textOverflow","description","isDonation","amountDetails","amountUSD","amountCrypto","currency","currencyCode","IconButton","window","PreviewIcon","EditIcon","handleClickOpen","DeleteIcon","aria-labelledby","aria-describedby","DialogContentText","delete","prevPages","filter","handleDelete","autoFocus","Divider","my","CreatePaymentPage","useParams","paymentPage","setPaymentPage","pageId","openDeleteDialog","setOpenDeleteDialog","fetchPaymentPage","prevState","handleChange","checked","convertCryptoToUSD","convertUSDToCrypto","cryptoAmount","parseFloat","usdAmount","payload","put","FormControlLabel","control","Checkbox","Fragment","Select","MenuItem","ml","ProfilePage","originalDisplayName","setOriginalDisplayName","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","isEditingDisplayName","setIsEditingDisplayName","isEditingPassword","setIsEditingPassword","openDialog","setOpenDialog","dialogType","setDialogType","fetchUserData","handleDialogClose","handleSaveDisplayName","handleSavePassword","PaymentPage","_paymentPage$amountDe","_paymentPage$amountDe2","_paymentPage$amountDe3","_paymentPage$amountDe4","_paymentPage$systemWa","guestWalletAddress","setGuestWalletAddress","senderEmailAddress","setSenderEmailAddress","copyText","setCopyText","copyCryptoText","setCopyCryptoText","dialogOpen","setDialogOpen","dialogMessage","setDialogMessage","handleCopy","text","navigator","clipboard","writeText","then","setTimeout","Paper","padding","backgroundColor","fontWeight","InputProps","readOnly","endAdornment","_paymentPage$amountDe5","systemWallet","walletNumber","_paymentPage$systemWa2","requestBody","toLowerCase","fromWallet","toWallet","senderEmail","isTestnet","state","ThankYouPage","location","useLocation","payerEmail","NotFoundContainer","styled","palette","background","paper","spacing","Illustration","NotFound","src","alt","gutterBottom","paragraph","PaymentPageTransactions","transactions","setTransactions","fetchTransactions","transaction","senderWalletAddress","actualAmountCrypto","Date","blockTimestamp","toLocaleString","EarningsPage","earnings","setEarnings","withdrawals","setWithdrawals","withdrawError","setWithdrawError","walletError","setWalletError","openWithdrawDialog","setOpenWithdrawDialog","withdrawAmount","setWithdrawAmount","withdrawCurrency","setWithdrawCurrency","withdrawWallet","setWithdrawWallet","startDate","setStartDate","endDate","setEndDate","loading","setLoading","fetchEarnings","fetchWithdrawals","totalEarnedBTC","totalEarnedETH","currentBalanceBTC","currentBalanceETH","InputLabelProps","shrink","mr","params","blob","Blob","url","URL","createObjectURL","link","document","href","setAttribute","body","appendChild","click","withdrawal","requestedDate","completedDate","toLocaleDateString","transactionId","slice","updatedStatus","Status","CompletedDate","prevWithdrawals","w","handleUpdateStatus","UpdateIcon","select","WalletNumber","Amount","CurrencyCode","reload","App","Router","basename","Routes","Route","path","element","ThankYou","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3dfdf87d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'https://cryptopaymentgatewaybackend.azurewebsites.net/api';//'http://localhost:5000/api'; // Adjust according to API endpoint\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default axiosInstance;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Container, Box, Link, TextField, Button, Typography } from '@mui/material';\r\nimport axios from '../../api/axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.post('/Auth/login', { email, password });\r\n      if (response.status === 200) {\r\n        localStorage.setItem('accessToken', response.data.jwtToken);\r\n        console.log(response);\r\n        console.log(localStorage.getItem('accessToken'));\r\n        localStorage.setItem('refreshToken', response.data.refreshToken);\r\n        navigate('/dashboard'); // Redirect to dashboard upon successful login\r\n      } else {\r\n        throw new Error('Failed to login' + response.status + response.message);\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to login');\r\n    }\r\n  };\r\n\r\n  return (\r\n<Container component=\"main\" maxWidth=\"sm\" sx={{\r\n      height: '100vh', // full height of the viewport\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center', // centers vertically\r\n      alignItems: 'center', // centers horizontally\r\n      color: '#003366', fontFamily: 'Montserrat, sans-serif' \r\n    }}>\r\n      <Box \r\n        sx={{ \r\n          height: '100vh',\r\n          display: 'flex', \r\n          flexDirection: 'column', \r\n          alignItems: 'center', \r\n          justifyContent: 'center', // Centers vertically\r\n          width: { xs: '95%', sm: '50%' }, // Responsive width\r\n          margin: 'auto' // Centering the form\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\" sx={{ mb: 3, color: '#003366' }}>\r\n          Login\r\n        </Typography>\r\n        <form onSubmit={handleLogin} style={{ width: '100%' }}>\r\n          <TextField\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ mt: 2, mb: 2, bgcolor: '#003366', color: '#FAF8FC' }}>\r\n            Login\r\n          </Button>\r\n          {error && <Typography color=\"error\" style={{ marginTop: '10px' }}>{error}</Typography>}\r\n          <Link component={RouterLink} to=\"/register\" variant=\"body2\" style={{ marginBottom: '20px' }}>\r\n            Don't have an account? Register here\r\n          </Link>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Container, Box, Link, TextField, Button, Typography, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress } from '@mui/material';\r\nimport axios from '../../api/axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RegisterPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [displayName, setDisplayName] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [generatedCode, setGeneratedCode] = useState('');\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setIsLoading(true);\r\n\r\n    if (!/^(?=.*[A-Z])(?=.*\\d).{8,}$/.test(password)) {\r\n      setError(\"Password must be at least 8 characters long, include a number and an uppercase letter.\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('/Auth/verify-email', { email });\r\n      setGeneratedCode(response.data.VerificationCode);\r\n      setIsDialogOpen(true);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Email verification failed');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleVerifyCode = async () => {\r\n    if (verificationCode === generatedCode) {\r\n      try {\r\n        setIsLoading(true);\r\n        await axios.post('/Auth/register', { email, passwordHash: password, displayName });\r\n        const loginResponse = await axios.post('/Auth/login', { email, password });\r\n        if (loginResponse.status === 200) {\r\n          localStorage.setItem('accessToken', loginResponse.data.jwtToken);\r\n          localStorage.setItem('refreshToken', loginResponse.data.refreshToken);\r\n          navigate('/dashboard');\r\n        } else {\r\n          throw new Error(`Something went wrong, try to log in ${loginResponse.status} ${loginResponse.data.message}`);\r\n        }\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || 'Registration failed');\r\n      } finally {\r\n        setIsLoading(false);\r\n        setIsDialogOpen(false);\r\n      }\r\n    } else {\r\n      setError('Verification code is incorrect.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\" sx={{\r\n      height: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    }}>\r\n      <Box\r\n        sx={{\r\n          height: '100vh',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          width: { xs: '95%', sm: '50%' },\r\n          margin: 'auto'\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\" sx={{ mb: 3, color: '#003366' }}>\r\n          Register\r\n        </Typography>\r\n        <form onSubmit={handleRegister} style={{ width: '100%' }}>\r\n          <TextField\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Confirm Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Display Name\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            name=\"displayName\"\r\n            value={displayName}\r\n            onChange={(e) => setDisplayName(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ mt: 2, mb: 2, bgcolor: '#003366', color: '#FAF8FC' }} disabled={isLoading}>\r\n            {isLoading ? <CircularProgress size={24} /> : 'Register'}\r\n          </Button>\r\n          {error && <Typography color=\"error\" style={{ marginTop: '10px' }}>{error}</Typography>}\r\n          <Link component={RouterLink} to=\"/login\" variant=\"body2\" style={{ marginBottom: '20px' }}>\r\n            Already have an account? Login here\r\n          </Link>\r\n        </form>\r\n        <Dialog open={isDialogOpen} onClose={() => setIsDialogOpen(false)}>\r\n          <DialogTitle>Verify Email</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              label=\"Verification Code\"\r\n              variant=\"outlined\"\r\n              type=\"text\"\r\n              value={verificationCode}\r\n              onChange={(e) => setVerificationCode(e.target.value)}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              required\r\n            />\r\n            {isLoading && <CircularProgress sx={{ mt: 2 }} />}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setIsDialogOpen(false)} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleVerifyCode} color=\"primary\" disabled={isLoading}>\r\n              Verify\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from '../api/axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst useAuth = () => {\r\n  const [auth, setAuth] = useState({\r\n    accessToken: localStorage.getItem('accessToken'),\r\n    refreshToken: localStorage.getItem('refreshToken'),\r\n    userId: localStorage.getItem('userId')\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const verifyToken = async () => {\r\n      try {\r\n        const response = await axios.post('/auth/verify-token', { token: auth.accessToken });\r\n        if (response.status !== 200 || !response.data.isValid) {\r\n          throw new Error('Token verification failed');\r\n        }\r\n        const userResponse = await axios.get('/auth/user-details', {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n        localStorage.setItem('userId', userResponse.data.id);\r\n        setAuth(auth => ({\r\n          ...auth,\r\n          userId: userResponse.data.id\r\n        }));\r\n      } catch (err) {\r\n        try {\r\n          const response = await axios.post('/auth/renew-token', { token: auth.refreshToken });\r\n          localStorage.setItem('accessToken', response.data.accessToken);\r\n          setAuth({\r\n            ...auth,\r\n            accessToken: response.data.accessToken\r\n          });\r\n        } catch (refreshError) {\r\n          localStorage.removeItem('accessToken');\r\n          localStorage.removeItem('refreshToken');\r\n          localStorage.removeItem('userId');\r\n          navigate('/login');\r\n        }\r\n      }\r\n    };\r\n\r\n    if (auth.accessToken) {\r\n      verifyToken();\r\n    } else {\r\n      navigate('/login');\r\n    }\r\n  }, [auth.accessToken, auth.refreshToken, navigate]);\r\n\r\n  return auth;\r\n};\r\n\r\nexport default useAuth;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Container, AppBar, Divider, Toolbar, Button, Typography, Table, TableBody, TableCell, TableHead, TableRow,\r\n  IconButton, Link, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Box, CircularProgress, useMediaQuery\r\n} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport PreviewIcon from '@mui/icons-material/Preview';\r\nimport axios from '../../api/axios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nconst Navigation = ({ handleLogout }) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  return (\r\n    <AppBar position=\"static\" sx={{ bgcolor: '#FAF8FC' }}>\r\n      <Toolbar>\r\n        {!isMobile && (\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1, color: '#003366' }}>\r\n            Crypto Payment Gateway\r\n          </Typography>\r\n        )}\r\n        <Box sx={{ display: 'flex', flexDirection: isMobile ? 'column' : 'row', alignItems: 'center', mx: 'auto' }}>\r\n          <Link component={RouterLink} to=\"/dashboard\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n            Dashboard\r\n          </Link>\r\n          <Link component={RouterLink} to=\"/earnings\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n            Earnings\r\n          </Link>\r\n          <Link component={RouterLink} to=\"/profile\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n            Profile\r\n          </Link>\r\n        </Box>\r\n        <Button onClick={handleLogout} variant=\"contained\" sx={{ m: 2, bgcolor: '#003366', color: '#FAF8FC' }}>\r\n          Log Out\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [paymentPages, setPaymentPages] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const auth = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPaymentPages = async () => {\r\n      try {\r\n        const getUserresponse = await axios.get('/auth/user-details', {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n        const response = await axios.get(`/PaymentPage/allbyuserid/${getUserresponse.data.id}`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n        setPaymentPages(response.data);\r\n      } catch (err) {\r\n        if (err.response.data === \"No payment pages found for this user.\" && err.response.status === 404) {\r\n          console.log('No payment pages found for this user.');\r\n        } else {\r\n          setError('Failed to fetch payment pages');\r\n        }\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (auth.accessToken) {\r\n      fetchPaymentPages();\r\n    }\r\n  }, [auth.accessToken]);\r\n\r\n  const handleLogout = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/auth/logout', {}, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n      });\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Log out failed');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`/PaymentPage/delete/${id}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` }\r\n      });\r\n      setPaymentPages(prevPages => prevPages.filter(page => page.id !== id));\r\n      setOpen(false);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to delete payment page');\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = (id) => {\r\n    setDeleteId(id);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: '#FAF8FC', minHeight: '100vh', display: 'flex', flexDirection: 'column', alignItems: 'center', color: '#003366', fontFamily: 'Montserrat, sans-serif' }}>\r\n      <Navigation handleLogout={handleLogout} />\r\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n        {error && <Typography color=\"error\">{error}</Typography>}\r\n        <Typography variant=\"h4\" sx={{ mt: 4, mb: 2 }}>\r\n          Мої платіжні сторінки\r\n        </Typography>\r\n        <Button\r\n          component={RouterLink}\r\n          to=\"/create-payment-page\"\r\n          variant=\"contained\"\r\n          sx={{ mb: 2, bgcolor: '#003366', color: '#FAF8FC' }}\r\n        >\r\n          Створити Нову Платіжну Сторінку\r\n        </Button>\r\n        {isLoading ? (\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : (\r\n          paymentPages.length === 0 ? (\r\n            <Typography variant=\"body1\" sx={{ mt: 4, textAlign: 'center', color: '#003366' }}>\r\n              Ви ще не створили жодної платіжнох сторінки. Ви можете це зробити натиснувши \"Створити нову платіжну сторінку\".\r\n            </Typography>\r\n          ) : (\r\n            <Box sx={{ overflowX: 'auto' }}>\r\n              <Table sx={{ minWidth: 650, bgcolor: '#FAF8FC', borderRadius: 2 }}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell sx={{ color: '#003366' }}>ID</TableCell>\r\n                    <TableCell sx={{ color: '#003366' }}>Назва</TableCell>\r\n                    <TableCell sx={{ color: '#003366' }}>Опис</TableCell>\r\n                    <TableCell sx={{ color: '#003366' }}>К-ть USD</TableCell>\r\n                    <TableCell sx={{ color: '#003366' }}>К-ть криптовалюти</TableCell>\r\n                    <TableCell sx={{ color: '#003366' }}>Криптовалюта</TableCell>\r\n                    <TableCell sx={{ color: '#003366' }}>Благодійний збір?</TableCell>\r\n                    <TableCell sx={{ color: '#003366' }}>Дії</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {paymentPages.map((page) => (\r\n                    <TableRow key={page.id}>\r\n                      <TableCell sx={{ color: '#003366' }}>{page.id}</TableCell>\r\n                      <TableCell>\r\n                        <Link component={RouterLink} to={`/payment-page-transactions/${page.id}`} sx={{ color: '#003366' }}>\r\n                          {page.title}\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell sx={{ color: '#003366', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 150 }}>{page.description}</TableCell>\r\n                      <TableCell sx={{ color: '#003366' }}>{page.isDonation ? '-' : page.amountDetails.amountUSD}</TableCell>\r\n                      <TableCell sx={{ color: '#003366' }}>{page.isDonation ? '-' : page.amountDetails.amountCrypto}</TableCell>\r\n                      <TableCell sx={{ color: '#003366' }}>{page.amountDetails.currency.currencyCode}</TableCell>\r\n                      <TableCell sx={{ color: '#003366' }}>{page.isDonation ? 'Так' : 'Ні'}</TableCell>\r\n                      <TableCell sx={{ color: '#003366', whiteSpace: 'nowrap' }}>\r\n                        <IconButton onClick={() => window.open(`/payment/${page.id}`, '_blank')} sx={{ color: '#003366' }}><PreviewIcon /></IconButton>\r\n                        <IconButton onClick={() => navigate(`/edit-payment-page/${page.id}`)} sx={{ color: '#003366' }}><EditIcon /></IconButton>\r\n                        <IconButton onClick={() => handleClickOpen(page.id)} sx={{ color: '#003366' }}><DeleteIcon /></IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          )\r\n        )}\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\" sx={{ color: '#003366' }}>{\"Delete Payment Page\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\" sx={{              color: '#E65B40' }}>\r\n              Are you sure you want to delete this payment page? This action cannot be undone.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} sx={{ color: '#003366' }}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={() => handleDelete(deleteId)} sx={{ color: '#E65B40' }} autoFocus>\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Divider sx={{ my: 4, mt: 14 }} />\r\n        <Typography variant=\"body1\" sx={{ mt: 4, textAlign: 'center', color: '#003366' }}>\r\n          Наш проект має на меті спростити налаштування і оплату криптовалютних рахунків, зробивши їх доступними для більшого кола користувачів.\r\n        </Typography>\r\n        <Divider sx={{ my: 4 }} />\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams, Link as RouterLink } from 'react-router-dom';\r\nimport { Container, AppBar, Toolbar, Button, Typography, useMediaQuery, TextField, Link, Select, MenuItem, Box, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Checkbox, FormControlLabel } from '@mui/material';\r\nimport axios from '../../api/axios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nconst Navigation = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  return (\r\n    <AppBar position=\"static\" sx={{ bgcolor: '#FAF8FC' }}>\r\n    <Toolbar>\r\n      {!isMobile && (\r\n        <Typography variant=\"h6\" sx={{ flexGrow: 1, color: '#003366' }}>\r\n          Crypto Payment Gateway\r\n        </Typography>\r\n      )}\r\n          <Box sx={{ display: 'flex', flexDirection: isMobile ? 'column' : 'row', alignItems: 'center', mx: 'auto' }}>\r\n            <Link component={RouterLink} to=\"/dashboard\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n              Dashboard\r\n            </Link>\r\n            <Link component={RouterLink} to=\"/earnings\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n              Earnings\r\n            </Link>\r\n            <Link component={RouterLink} to=\"/profile\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n              Profile\r\n            </Link>\r\n          </Box>\r\n        <Button component={RouterLink} to=\"/dashboard\" variant=\"contained\" sx={{ m: 2, bgcolor: '#003366', color: '#FAF8FC' }}>\r\n          Back to Dashboard\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst CreatePaymentPage = () => {\r\n  const { id } = useParams();\r\n  const [paymentPage, setPaymentPage] = useState({\r\n    title: '',\r\n    description: '',\r\n    amountUSD: '',\r\n    amountCrypto: '',\r\n    currencyCode: 'BTC',\r\n    isDonation: false,\r\n    pageId: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const navigate = useNavigate();\r\n  const auth = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchPaymentPage = async () => {\r\n      try {\r\n        const response = await axios.get(`/PaymentPage/${id}`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n        if (response.data.userId !== auth.userId) {\r\n          navigate('/dashboard');\r\n        } else {\r\n          setPaymentPage({\r\n            title: response.data.title,\r\n            description: response.data.description,\r\n            amountUSD: response.data.amountDetails.amountUSD,\r\n            amountCrypto: response.data.amountDetails.amountCrypto,\r\n            currencyCode: response.data.amountDetails.currency.currencyCode,\r\n            isDonation: response.data.isDonation,\r\n            pageId: id\r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.error('Failed to fetch payment page:', err);\r\n        setError('Failed to fetch payment page');\r\n        navigate('/dashboard');\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchPaymentPage();\r\n    } else {\r\n      setPaymentPage(prevState => ({\r\n        ...prevState,\r\n        pageId: -1\r\n      }));\r\n    }\r\n  }, [id, auth.accessToken, auth.userId, navigate]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, checked, type } = e.target;\r\n    setPaymentPage(prevState => ({\r\n      ...prevState,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n\r\n    if (name === 'amountCrypto' && value) {\r\n      convertCryptoToUSD(value);\r\n    } else if (name === 'amountUSD' && value) {\r\n      convertUSDToCrypto(value);\r\n    }\r\n  };\r\n\r\n  const convertCryptoToUSD = async (cryptoAmount) => {\r\n    try {\r\n      const response = await axios.post('/PaymentPage/convertToUSD', {\r\n        cryptoAmount: parseFloat(cryptoAmount),\r\n        currencyCode: paymentPage.currencyCode\r\n      }, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n      });\r\n      setPaymentPage(prevState => ({\r\n        ...prevState,\r\n        amountUSD: response.data.amountUSD\r\n      }));\r\n    } catch (err) {\r\n      setError('Failed to convert crypto to USD: ' + err.response?.data?.Error || err.message);\r\n    }\r\n  };\r\n\r\n  const convertUSDToCrypto = async (usdAmount) => {\r\n    try {\r\n      const response = await axios.post('/PaymentPage/convertToCrypto', {\r\n        usdAmount: parseFloat(usdAmount),\r\n        currencyCode: paymentPage.currencyCode\r\n      }, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n      });\r\n      setPaymentPage(prevState => ({\r\n        ...prevState,\r\n        amountCrypto: response.data.amountCrypto\r\n      }));\r\n    } catch (err) {\r\n      setError('Failed to convert USD to crypto: ' + err.response?.data?.Error || err.message);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!paymentPage.isDonation && (paymentPage.amountUSD < 10 || paymentPage.amountCrypto < 0.00001)) {\r\n      setError('Amount USD must be at least 100 and Amount Crypto must be at least 0.001.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        title: paymentPage.title,\r\n        description: paymentPage.description,\r\n        amountUSD: paymentPage.isDonation ? 0 : paymentPage.amountUSD,\r\n        amountCrypto: paymentPage.isDonation ? 0 : paymentPage.amountCrypto,\r\n        currencyCode: paymentPage.currencyCode,\r\n        isDonation: paymentPage.isDonation,\r\n        pageId: paymentPage.pageId\r\n      };\r\n\r\n      if (id) {\r\n        await axios.put('/PaymentPage/update', payload, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n      } else {\r\n        await axios.post('/PaymentPage/create', payload, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n      }\r\n      navigate('/dashboard');\r\n    } catch (err) {\r\n      setError('Failed to save payment page');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await axios.delete(`/PaymentPage/delete/${id}`, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n      });\r\n      navigate('/dashboard');\r\n    } catch (err) {\r\n      setError('Failed to delete payment page');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: '#FAF8FC', minHeight: '100vh', display: 'flex', flexDirection: 'column', alignItems: 'center', color: '#003366', fontFamily: 'Montserrat, sans-serif' }}>\r\n    <Navigation />\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          minHeight=\"80vh\"\r\n          maxWidth=\"sm\"\r\n          mx=\"auto\"\r\n        >\r\n      <Typography variant=\"h4\" sx={{ mt: 4, mb: 2 }}>\r\n        {id ? 'Update' : 'Create'} Payment Page\r\n      </Typography>\r\n      {error && <Typography color=\"error\">{error}</Typography>}\r\n      <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Title\"\r\n          name=\"title\"\r\n          value={paymentPage.title}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          value={paymentPage.description}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={paymentPage.isDonation}\r\n              onChange={handleChange}\r\n              name=\"isDonation\"\r\n              color=\"primary\"\r\n              disabled={!!id} // Disable when updating\r\n            />\r\n          }\r\n          label=\"Is Donation\"\r\n        />\r\n        {!paymentPage.isDonation && (\r\n          <>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Amount USD\"\r\n              name=\"amountUSD\"\r\n              value={paymentPage.amountUSD}\r\n              onChange={handleChange}\r\n              margin=\"normal\"\r\n              required\r\n              disabled={!!id} // Disable amount fields when editing\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Amount Crypto\"\r\n              name=\"amountCrypto\"\r\n              value={paymentPage.amountCrypto}\r\n              onChange={handleChange}\r\n              margin=\"normal\"\r\n              required\r\n              disabled={!!id} // Disable amount fields when editing\r\n            />\r\n          </>\r\n        )}\r\n        <Select\r\n          fullWidth\r\n          label=\"Currency Code\"\r\n          name=\"currencyCode\"\r\n          value={paymentPage.currencyCode}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          required\r\n          disabled={!!id} // Disable currency selection when editing\r\n        >\r\n          <MenuItem value=\"BTC\">BTC</MenuItem>\r\n          <MenuItem value=\"ETH\">ETH</MenuItem>\r\n        </Select>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ mt: 2, bgcolor: '#003366', color: '#FAF8FC'  }}>\r\n          {id ? 'Update' : 'Create'} Payment Page\r\n        </Button>\r\n        {id && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={{ mt: 2, ml: 2, bgcolor: '#E65B40', color: '#FAF8FC'  }}\r\n            onClick={() => setOpenDeleteDialog(true)}\r\n          >\r\n            Delete Payment Page\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={() => setOpenDeleteDialog(false)}\r\n      >\r\n        <DialogTitle sx={{ color: '#003366' }}>Confirm Delete</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText sx={{ color: '#E65B40' }}>\r\n            Are you sure you want to delete this payment page? This action cannot be undone.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDeleteDialog(false)} color=\"primary\" sx={{ color: '#003366' }}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"secondary\" sx={{ color: '#E65B40' }}>Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        </Box>\r\n    </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreatePaymentPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container, AppBar, Toolbar, Link, TextField, Button, Typography, Dialog, DialogActions,\r\n  DialogContent, DialogContentText, DialogTitle, Box, useMediaQuery\r\n} from '@mui/material';\r\nimport axios from '../../api/axios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nconst Navigation = ({ handleLogout }) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  return (\r\n    <AppBar position=\"static\" sx={{ bgcolor: '#FAF8FC' }}>\r\n      <Toolbar>\r\n        {!isMobile && (\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1, color: '#003366' }}>\r\n            Crypto Payment Gateway\r\n          </Typography>\r\n        )}\r\n        <Box sx={{ display: 'flex', flexDirection: isMobile ? 'column' : 'row', alignItems: 'center', mx: 'auto' }}>\r\n          <Link component={RouterLink} to=\"/dashboard\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n            Dashboard\r\n          </Link>\r\n          <Link component={RouterLink} to=\"/earnings\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n            Earnings\r\n          </Link>\r\n          <Link component={RouterLink} to=\"/profile\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n            Profile\r\n          </Link>\r\n        </Box>\r\n        <Button onClick={handleLogout} variant=\"contained\" sx={{ m: 2, bgcolor: '#003366', color: '#FAF8FC' }}>\r\n          Log Out\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst ProfilePage = () => {\r\n  const auth = useAuth();\r\n  const [displayName, setDisplayName] = useState('');\r\n  const [originalDisplayName, setOriginalDisplayName] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [isEditingDisplayName, setIsEditingDisplayName] = useState(false);\r\n  const [isEditingPassword, setIsEditingPassword] = useState(false);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [dialogType, setDialogType] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch user data\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await axios.get(`/auth/user-details`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n        setDisplayName(response.data.displayName);\r\n        setOriginalDisplayName(response.data.displayName);\r\n      } catch (err) {\r\n        console.error('Failed to fetch user data:', err);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [auth.accessToken]);\r\n\r\n  const handleDisplayNameChange = (e) => {\r\n    setDisplayName(e.target.value);\r\n    setIsEditingDisplayName(e.target.value !== originalDisplayName);\r\n  };\r\n\r\n  const handleOldPasswordChange = (e) => setOldPassword(e.target.value);\r\n  const handleNewPasswordChange = (e) => setNewPassword(e.target.value);\r\n  const handleConfirmNewPasswordChange = (e) => setConfirmNewPassword(e.target.value);\r\n\r\n  const handleSaveDisplayName = () => {\r\n    setDialogType('displayName');\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleSavePassword = () => {\r\n    setDialogType('password');\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleDialogClose = () => setOpenDialog(false);\r\n\r\n  const handleDialogConfirm = async () => {\r\n    if (dialogType === 'displayName') {\r\n      // Update display name\r\n      try {\r\n        await axios.put('/auth/updateDisplayName', { displayName }, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n        setIsEditingDisplayName(false);\r\n        setOriginalDisplayName(displayName);\r\n      } catch (err) {\r\n        console.error('Failed to update display name:', err);\r\n      }\r\n    } else if (dialogType === 'password') {\r\n      // Update password\r\n      try {\r\n        if (newPassword !== confirmNewPassword) {\r\n          throw new Error('New passwords do not match');\r\n        }\r\n\r\n        await axios.put('/auth/updatePassword', { oldPassword, newPassword }, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n        setOldPassword('');\r\n        setNewPassword('');\r\n        setConfirmNewPassword('');\r\n        setIsEditingPassword(false);\r\n      } catch (err) {\r\n        console.error('Failed to update password:', err);\r\n      }\r\n    }\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleLogout = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/auth/logout', {}, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n      });\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      localStorage.removeItem('userId');\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Log out failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: '#FAF8FC', minHeight: '100vh', display: 'flex', flexDirection: 'column', alignItems: 'center', color: '#003366', fontFamily: 'Montserrat, sans-serif' }}>\r\n      <Navigation handleLogout={handleLogout} />\r\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          minHeight=\"80vh\"\r\n          maxWidth=\"sm\"\r\n          mx=\"auto\"\r\n        >\r\n          <Typography variant=\"h4\" sx={{ mt: 4, mb: 2 }}>\r\n            User Profile\r\n          </Typography>\r\n          {error && <Typography color=\"error\">{error}</Typography>}\r\n          <Box component=\"form\" sx={{ mt: 3 }}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Display Name\"\r\n              name=\"displayName\"\r\n              value={displayName}\r\n              onChange={handleDisplayNameChange}\r\n              margin=\"normal\"\r\n            />\r\n            {isEditingDisplayName && (\r\n              <Button variant=\"contained\" sx={{ mt: 2, bgcolor: '#003366', color: '#FAF8FC' }} onClick={handleSaveDisplayName}>\r\n                Save\r\n              </Button>\r\n            )}\r\n            <Typography variant=\"h6\" sx={{ mt: 4, mb: 2 }}>\r\n              Change Password\r\n            </Typography>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Old Password\"\r\n              type=\"password\"\r\n              name=\"oldPassword\"\r\n              value={oldPassword}\r\n              onChange={handleOldPasswordChange}\r\n              margin=\"normal\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"New Password\"\r\n              type=\"password\"\r\n              name=\"newPassword\"\r\n              value={newPassword}\r\n              onChange={handleNewPasswordChange}\r\n              margin=\"normal\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Confirm New Password\"\r\n              type=\"password\"\r\n              name=\"confirmNewPassword\"\r\n              value={confirmNewPassword}\r\n              onChange={handleConfirmNewPasswordChange}\r\n              margin=\"normal\"\r\n            />\r\n            <Button variant=\"contained\" sx={{ mt: 2, bgcolor: '#003366', color: '#FAF8FC' }} onClick={handleSavePassword}>\r\n              Save Password\r\n            </Button>\r\n          </Box>\r\n\r\n          <Dialog open={openDialog} onClose={handleDialogClose}>\r\n            <DialogTitle>Confirm {dialogType === 'displayName' ? 'Display Name Change' : 'Password Change'}</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Are you sure you want to {dialogType === 'displayName' ? 'change your display name?' : 'change your password?'}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleDialogClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleDialogConfirm} color=\"primary\">\r\n                Confirm\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Container, Typography, TextField, Button, Box, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Paper } from '@mui/material';\r\nimport axios from '../../api/axios';\r\n\r\nconst PaymentPage = () => {\r\n  const { id } = useParams();\r\n  const [paymentPage, setPaymentPage] = useState({});\r\n  const [guestWalletAddress, setGuestWalletAddress] = useState('');\r\n  const [senderEmailAddress, setSenderEmailAddress] = useState('');\r\n  const [copyText, setCopyText] = useState('Copy');\r\n  const [copyCryptoText, setCopyCryptoText] = useState('Copy');\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialogMessage, setDialogMessage] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPaymentPage = async () => {\r\n      try {\r\n        const response = await axios.get(`/PaymentPage/${id}`);\r\n        setPaymentPage(response.data);\r\n      } catch (err) {\r\n        console.error('Failed to fetch payment page:', err);\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchPaymentPage();\r\n    }\r\n  }, [id]);\r\n\r\n  const handleCopy = (text, type) => {\r\n    navigator.clipboard.writeText(text).then(() => {\r\n      if (type === 'address') {\r\n        setCopyText('Copied!');\r\n        setTimeout(() => setCopyText('Copy'), 2000);\r\n      } else if (type === 'crypto') {\r\n        setCopyCryptoText('Copied!');\r\n        setTimeout(() => setCopyCryptoText('Copy'), 2000);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleVerifyPayment = async () => {\r\n    if (!guestWalletAddress || !senderEmailAddress) {\r\n      setDialogMessage('Please provide both wallet address and email address.');\r\n      setDialogOpen(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const requestBody = {\r\n        pageId: id,\r\n        type: paymentPage.amountDetails.currency.currencyCode.toLowerCase(),\r\n        fromWallet: guestWalletAddress,\r\n        toWallet: paymentPage.systemWallet.walletNumber,\r\n        amountCrypto: paymentPage.amountDetails.amountCrypto,\r\n        senderEmail: senderEmailAddress,\r\n        isTestnet: true,\r\n        isDonation: paymentPage.isDonation\r\n      };\r\n      \r\n      const response = await axios.post('/Transaction/verify-tr', requestBody);\r\n\r\n      if (response.data.status === 'not found') {\r\n        setDialogMessage('Transaction not found.');\r\n      } else if (response.data.status === 'pending') {\r\n        setDialogMessage('Transaction pending.');\r\n      } else if (response.data.status === 'successful') {\r\n        navigate('/thank-you', { state: { paymentPage, guestWalletAddress, senderEmailAddress } });\r\n      }\r\n    } catch (err) {\r\n      setDialogMessage('Failed to verify payment.');\r\n    }\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" sx={{\r\n      height: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    }}>\r\n      <Paper sx={{ padding: 4, width: '100%', textAlign: 'center', backgroundColor: '#f9f9f9' }}>\r\n        <Typography component=\"h1\" variant=\"h4\" color=\"primary\">{paymentPage.title}</Typography>\r\n        <Typography component=\"h2\" variant=\"h6\" color=\"textSecondary\">{paymentPage.description}</Typography>\r\n        <Box sx={{ mt: 4 }}>\r\n          <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>Cryptocurrency: {paymentPage.amountDetails?.currency?.currencyCode}</Typography>\r\n          {!paymentPage.isDonation && (\r\n            <>\r\n              <Typography variant=\"body1\">Amount USD: {paymentPage.amountDetails?.amountUSD}</Typography>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Amount Crypto:\"\r\n                value={paymentPage.amountDetails?.amountCrypto || ''}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  endAdornment: (\r\n                    <Button onClick={() => handleCopy(paymentPage.amountDetails?.amountCrypto, 'crypto')}>{copyCryptoText}</Button>\r\n                  )\r\n                }}\r\n                sx={{ mt: 2 }}\r\n              />\r\n            </>\r\n          )}\r\n          <TextField\r\n            fullWidth\r\n            label=\"System Wallet Address\"\r\n            value={paymentPage.systemWallet?.walletNumber || ''}\r\n            InputProps={{\r\n              readOnly: true,\r\n              endAdornment: (\r\n                <Button onClick={() => handleCopy(paymentPage.systemWallet?.walletNumber, 'address')}>{copyText}</Button>\r\n              )\r\n            }}\r\n            sx={{ mt: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Your Wallet Address\"\r\n            value={guestWalletAddress}\r\n            onChange={(e) => setGuestWalletAddress(e.target.value)}\r\n            sx={{ mt: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Your Email Address\"\r\n            value={senderEmailAddress}\r\n            onChange={(e) => setSenderEmailAddress(e.target.value)}\r\n            sx={{ mt: 2 }}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleVerifyPayment} sx={{ mt: 2 }}>Verify Payment</Button>\r\n        </Box>\r\n      </Paper>\r\n      <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n        <DialogTitle>Payment Status</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{dialogMessage}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDialogOpen(false)} color=\"primary\">Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n","// src/Pages/ThankYouPage.js\r\nimport React from 'react';\r\nimport { Container, Typography, Box, Paper } from '@mui/material';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ThankYouPage = () => {\r\n  const location = useLocation();\r\n  const { paymentPage, guestWalletAddress, payerEmail } = location.state || {};\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\" sx={{ marginTop: 8 }}>\r\n      <Paper sx={{ padding: 4 }}>\r\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n          Thank You for Your Payment!\r\n        </Typography>\r\n        <Typography variant=\"body1\" sx={{ marginTop: 2 }}>\r\n          Your payment has been successfully processed. Below are the details of your transaction:\r\n        </Typography>\r\n        <Box sx={{ marginTop: 2 }}>\r\n          <Typography variant=\"h6\">Transaction Details</Typography>\r\n          <Typography variant=\"body1\">Title: {paymentPage?.title}</Typography>\r\n          <Typography variant=\"body1\">Description: {paymentPage?.description}</Typography>\r\n          <Typography variant=\"body1\">Cryptocurrency: {paymentPage?.amountDetails?.currency?.currencyCode}</Typography>\r\n          <Typography variant=\"body1\">Amount USD: {paymentPage?.amountDetails?.amountUSD}</Typography>\r\n          <Typography variant=\"body1\">Amount Crypto: {paymentPage?.amountDetails?.amountCrypto}</Typography>\r\n          <Typography variant=\"body1\">System Wallet Address: {paymentPage?.systemWallet?.walletNumber}</Typography>\r\n          <Typography variant=\"body1\">Your Wallet Address: {guestWalletAddress}</Typography>\r\n          <Typography variant=\"body1\">Your Email: {payerEmail}</Typography>\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ThankYouPage;\r\n","// src/Pages/NotFound.js\r\nimport React from 'react';\r\nimport { Container, Box, Typography, Button } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { styled } from '@mui/system';\r\n\r\nconst NotFoundContainer = styled(Container)(({ theme }) => ({\r\n  textAlign: 'center',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '100vh',\r\n  backgroundColor: theme.palette.background.paper,\r\n  padding: theme.spacing(4),\r\n}));\r\n\r\nconst Illustration = styled('img')({\r\n  maxWidth: '100%',\r\n  height: 'auto',\r\n  marginBottom: '20px',\r\n});\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <NotFoundContainer>\r\n      <Illustration src=\"/assets/404-illustration.png\" alt=\"404 Not Found\" />\r\n      <Typography variant=\"h1\" color=\"primary\" gutterBottom>\r\n        404\r\n      </Typography>\r\n      <Typography variant=\"h5\" color=\"textSecondary\" paragraph>\r\n        Oops! The page you're looking for doesn't exist.\r\n      </Typography>\r\n      <Typography variant=\"body1\" color=\"textSecondary\" paragraph>\r\n        It looks like the page you are trying to reach is either not available or has been moved.\r\n      </Typography>\r\n      <Button component={RouterLink} to=\"/\" variant=\"contained\" color=\"primary\">\r\n        Go Back Home\r\n      </Button>\r\n    </NotFoundContainer>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","// src/Pages/PaymentPage/PaymentPageTransactions.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Button, Box } from '@mui/material';\r\nimport axios from '../../api/axios';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst PaymentPageTransactions = () => {\r\n  const { id } = useParams();\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n  const auth = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const response = await axios.get(`/Transaction/bypage/${id}`, {\r\n            headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n        setTransactions(response.data);\r\n      } catch (err) {\r\n        setError('Failed to fetch transactions.');\r\n      }\r\n    };\r\n\r\n    fetchTransactions();\r\n  }, [id, auth.accessToken]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Transactions for Payment Page {id}\r\n      </Typography>\r\n      {error && <Typography color=\"error\">{error}</Typography>}\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Transaction ID</TableCell>\r\n            <TableCell>From Wallet</TableCell>\r\n            <TableCell>To Wallet</TableCell>\r\n            <TableCell>Amount</TableCell>\r\n            <TableCell>Status</TableCell>\r\n            <TableCell>Timestamp</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {transactions.map((transaction) => (\r\n            <TableRow key={transaction.id}>\r\n              <TableCell>{transaction.id}</TableCell>\r\n              <TableCell>{transaction.senderWalletAddress}</TableCell>\r\n              <TableCell>{transaction.paymentPage.systemWallet.walletNumber}</TableCell>\r\n              <TableCell>{transaction.actualAmountCrypto}</TableCell>\r\n              <TableCell>{transaction.status}</TableCell>\r\n              <TableCell>{new Date(transaction.blockTimestamp).toLocaleString()}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <Box mt={2}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/dashboard')}>\r\n          Back to Dashboard\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PaymentPageTransactions;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, AppBar, Divider, Toolbar, Button, Typography, Table, TableBody, TableCell, TableHead, TableRow, Link, Box, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, MenuItem, IconButton, CircularProgress } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport axios from '../../api/axios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport UpdateIcon from '@mui/icons-material/Update';\r\n\r\nconst Navigation = ({ handleLogout }) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  return (\r\n    <AppBar position=\"static\" sx={{ bgcolor: '#FAF8FC' }}>\r\n      <Toolbar>\r\n        {!isMobile && (\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1, color: '#003366' }}>\r\n            Crypto Payment Gateway\r\n          </Typography>\r\n        )}\r\n        <Box sx={{ display: 'flex', flexDirection: isMobile ? 'column' : 'row', alignItems: 'center', mx: 'auto' }}>\r\n          <Link component={RouterLink} to=\"/dashboard\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n            Dashboard\r\n          </Link>\r\n          <Link component={RouterLink} to=\"/earnings\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n            Earnings\r\n          </Link>\r\n          <Link component={RouterLink} to=\"/profile\" color=\"inherit\" sx={{ m: 3, color: '#003366' }}>\r\n            Profile\r\n          </Link>\r\n        </Box>\r\n        <Button onClick={handleLogout} variant=\"contained\" sx={{ m: 2, bgcolor: '#003366', color: '#FAF8FC' }}>\r\n          Log Out\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst EarningsPage = () => {\r\n  const [earnings, setEarnings] = useState(null);\r\n  const [withdrawals, setWithdrawals] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [withdrawError, setWithdrawError] = useState('');\r\n  const [walletError, setWalletError] = useState('');\r\n  const [openWithdrawDialog, setOpenWithdrawDialog] = useState(false);\r\n  const [withdrawAmount, setWithdrawAmount] = useState('');\r\n  const [withdrawCurrency, setWithdrawCurrency] = useState('BTC');\r\n  const [withdrawWallet, setWithdrawWallet] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [loading, setLoading] = useState(false); // New state variable for loading\r\n  const auth = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchEarnings = async () => {\r\n      try {\r\n        const response = await axios.get('/Earnings/view-earnings', {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n        setEarnings(response.data);\r\n      } catch (err) {\r\n        setError('Failed to fetch earnings');\r\n      }\r\n    };\r\n\r\n    const fetchWithdrawals = async () => {\r\n      try {\r\n        const response = await axios.get('/Earnings/view-withdrawal-history', {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n        });\r\n        setWithdrawals(response.data);\r\n      } catch (err) {\r\n        if (err.response.data === \"No withdrawal history found.\" && err.response.status === 404) {\r\n          console.log('No withdrawals found for this user.');\r\n        } else {\r\n          setError('Failed to fetch withdrawals');\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchEarnings();\r\n    fetchWithdrawals();\r\n  }, [auth.accessToken]);\r\n\r\n  const handleWithdraw = async () => {\r\n    if (!withdrawWallet) {\r\n      setWalletError('Wallet address is required');\r\n      return;\r\n    }\r\n\r\n    if (withdrawCurrency === 'BTC' && parseFloat(withdrawAmount) > earnings.currentBalanceBTC) {\r\n      setWithdrawError(`Insufficient balance. Current BTC balance: ${earnings.currentBalanceBTC}`);\r\n      return;\r\n    }\r\n  \r\n    if (withdrawCurrency === 'ETH' && parseFloat(withdrawAmount) > earnings.currentBalanceETH) {\r\n      setWithdrawError(`Insufficient balance. Current ETH balance: ${earnings.currentBalanceETH}`);\r\n      return;\r\n    }\r\n  \r\n    setLoading(true);\r\n    try {\r\n      await axios.post('/Earnings/withdraw-earnings', {\r\n        WalletNumber: withdrawWallet,\r\n        Amount: parseFloat(withdrawAmount),\r\n        CurrencyCode: withdrawCurrency\r\n      }, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n      });\r\n      setOpenWithdrawDialog(false);\r\n      setWithdrawError('');\r\n      window.location.reload();\r\n    } catch (err) {\r\n      setWithdrawError('Failed to withdraw earnings');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateStatus = async (transactionId) => {\r\n    try {\r\n      const response = await axios.get(`/Earnings/check-transaction-status/${transactionId}`, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n      });\r\n\r\n      const updatedStatus = response.data.Status;\r\n      const completedDate = response.data.CompletedDate;\r\n  \r\n      setWithdrawals(prevWithdrawals => \r\n        prevWithdrawals.map(w => \r\n          w.id === transactionId ? { ...w, status: updatedStatus, completedDate: completedDate ? new Date(completedDate) : w.completedDate } : w\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError('Failed to update transaction status');\r\n    }\r\n  };\r\n\r\n  const handleGenerateReport = async () => {\r\n    try {\r\n      const response = await axios.get('/Earnings/generate-earnings-report', {\r\n        params: {\r\n          startDate: startDate,\r\n          endDate: endDate\r\n        },\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n      });\r\n      const blob = new Blob([response.data], { type: 'application/pdf' });\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'EarningsReport.pdf');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    } catch (err) {\r\n      setError('Failed to generate report');\r\n    }\r\n  };\r\n\r\n  const handleLogout = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/auth/logout', {}, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` }\r\n      });\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n    } catch (err) {\r\n      setError('Log out failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: '#FAF8FC', minHeight: '100vh', color: '#003366', fontFamily: 'Montserrat, sans-serif' }}>\r\n      <Navigation handleLogout={handleLogout} />\r\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n        {error && <Typography color=\"error\">{error}</Typography>}\r\n        <Typography variant=\"h4\" sx={{ mb: 2, color: '#003366' }}>Earnings Information</Typography>\r\n        {earnings && (\r\n          <Box sx={{ mb: 4 }}>\r\n            <Typography variant=\"h6\">Total Earnings</Typography>\r\n            <Typography variant=\"body1\">Total Earned BTC: {earnings.totalEarnedBTC}</Typography>\r\n            <Typography variant=\"body1\">Total Earned ETH: {earnings.totalEarnedETH}</Typography>\r\n            <Typography variant=\"h6\">Current Balance</Typography>\r\n            <Typography variant=\"body1\">Current Balance BTC: {earnings.currentBalanceBTC}</Typography>\r\n            <Typography variant=\"body1\">Current Balance ETH: {earnings.currentBalanceETH}</Typography>\r\n          </Box>\r\n        )}\r\n        <Button variant=\"contained\" sx={{ mb: 2, bgcolor: '#003366', color: '#FAF8FC' }} onClick={() => setOpenWithdrawDialog(true)}>\r\n          Withdraw Earnings\r\n        </Button>\r\n        <Divider sx={{ my: 4 }} />\r\n        <Box sx={{ display: 'flex', my: 2 }}>\r\n          <TextField\r\n            label=\"Start Date\"\r\n            type=\"date\"\r\n            InputLabelProps={{ shrink: true }}\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n            sx={{ mr: 2 }}\r\n          />\r\n          <TextField\r\n            label=\"End Date\"\r\n            type=\"date\"\r\n            InputLabelProps={{ shrink: true }}\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n            sx={{ mr: 2 }}\r\n          />\r\n        </Box>\r\n        <Button variant=\"contained\" sx={{ mb: 2, bgcolor: '#003366', color: '#FAF8FC' }} onClick={handleGenerateReport}>\r\n          Generate PDF Report\r\n        </Button>\r\n        <Divider sx={{ my: 4 }} />\r\n        <Typography variant=\"h4\" sx={{ mb: 2, color: '#003366' }}>Withdrawal History</Typography>\r\n        {withdrawals.length === 0 ? (\r\n          <Typography variant=\"body1\">No withdrawals made yet.</Typography>) : (\r\n          <Table sx={{ minWidth: 650, bgcolor: '#FAF8FC', borderRadius: 2 }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ color: '#003366' }}>ID</TableCell>\r\n                <TableCell sx={{ color: '#003366' }}>Amount</TableCell>\r\n                <TableCell sx={{ color: '#003366' }}>Currency</TableCell>\r\n                <TableCell sx={{ color: '#003366' }}>Status</TableCell>\r\n                <TableCell sx={{ color: '#003366' }}>Requested Date</TableCell>\r\n                <TableCell sx={{ color: '#003366' }}>Completed Date</TableCell>\r\n                <TableCell sx={{ color: '#003366' }}>Transaction Hash</TableCell>\r\n                <TableCell sx={{ color: '#003366' }}>Update Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {withdrawals.map((withdrawal) => (\r\n                <TableRow key={withdrawal.id}>\r\n                  <TableCell sx={{ color: '#003366' }}>{withdrawal.id}</TableCell>\r\n                  <TableCell sx={{ color: '#003366' }}>{withdrawal.amountDetails.amountCrypto}</TableCell>\r\n                  <TableCell sx={{ color: '#003366' }}>{withdrawal.amountDetails.currency.currencyCode}</TableCell>\r\n                  <TableCell sx={{ color: '#003366' }}>{withdrawal.status}</TableCell>\r\n                  <TableCell sx={{ color: '#003366' }}>{new Date(withdrawal.requestedDate).toLocaleString()}</TableCell>\r\n                  <TableCell sx={{ color: '#003366' }}>{withdrawal.completedDate ? new Date(withdrawal.completedDate).toLocaleDateString() : 'Pending'}</TableCell>\r\n                  <TableCell sx={{ color: '#003366' }}>\r\n                    <Link \r\n                      href={withdrawal.amountDetails.currency.currencyCode === 'BTC' ? \r\n                        `https://live.blockcypher.com/btc-testnet/tx/${withdrawal.transactionId}` : \r\n                        `https://sepolia.etherscan.io/tx/${withdrawal.transactionId}`\r\n                      } \r\n                      target=\"_blank\" \r\n                      sx={{ color: '#003366' }}\r\n                    >\r\n                      {`${withdrawal.transactionId.slice(0, 6)}...`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton onClick={() => handleUpdateStatus(withdrawal.id)} sx={{ color: '#003366' }}>\r\n                      <UpdateIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n        <Divider sx={{ my: 4 }} />\r\n        <Dialog\r\n          open={openWithdrawDialog}\r\n          onClose={() => setOpenWithdrawDialog(false)}\r\n        >\r\n          <DialogTitle>Withdraw Earnings</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Enter the details to withdraw your earnings.\r\n            </DialogContentText>\r\n            {withdrawError && <Typography color=\"error\">{withdrawError}</Typography>}\r\n            <Typography variant=\"body1\">\r\n              Current Balance BTC: {earnings ? earnings.currentBalanceBTC : 'Loading...'}\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              Current Balance ETH: {earnings ? earnings.currentBalanceETH : 'Loading...'}\r\n            </Typography>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Amount\"\r\n              type=\"number\"\r\n              fullWidth\r\n              value={withdrawAmount}\r\n              onChange={(e) => setWithdrawAmount(e.target.value)}\r\n            />\r\n            <TextField\r\n              select\r\n              margin=\"dense\"\r\n              label=\"Currency\"\r\n              fullWidth\r\n              value={withdrawCurrency}\r\n              onChange={(e) => setWithdrawCurrency(e.target.value)}\r\n            >\r\n              <MenuItem value=\"BTC\">BTC</MenuItem>\r\n              <MenuItem value=\"ETH\">ETH</MenuItem>\r\n            </TextField>\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Wallet Address\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={withdrawWallet}\r\n              onChange={(e) => setWithdrawWallet(e.target.value)}\r\n            />\r\n            {walletError && <Typography color=\"error\">{walletError}</Typography>}\r\n            <DialogContentText sx={{ mt: 2, color: '#E65B40' }}>\r\n              It's very important to paste your correct address in the correct cryptocurrency. If there's a mistake, the crypto will be lost.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setOpenWithdrawDialog(false)} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleWithdraw} color=\"primary\">\r\n              {loading ? <CircularProgress size={24} /> : 'Withdraw'}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EarningsPage;\r\n\r\n","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes\r\n} from \"react-router-dom\";\r\n\r\nimport LoginPage from './Pages/AuthPage/LoginPage';\r\nimport RegisterPage from './Pages/AuthPage/RegisterPage';\r\nimport Dashboard from './Pages/Dashboard/Dashboard';\r\nimport CreatePaymentPage from './Pages/Dashboard/CreatePaymentPage';\r\nimport ProfilePage from './Pages/Dashboard/ProfilePage';\r\nimport PaymentPage from './Pages/PaymentPage/PaymentPage';\r\nimport ThankYou from './Pages/PaymentPage/ThankYou';\r\nimport NotFound from './Pages/ErrorPages/NotFound';\r\nimport PaymentPageTransactions from './Pages/PaymentPage/PaymentPageTransactions'\r\nimport EarningsPage from './Pages/Dashboard/EarningsPage'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <Router basename=\"https://alexeybilko.github.io/cryptopay\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<LoginPage />} />\r\n          <Route path=\"/login\" element={<LoginPage />} />\r\n          <Route path=\"/register\" element={<RegisterPage />} />\r\n          <Route path=\"/dashboard\" element={<Dashboard />} />\r\n          <Route path=\"/profile\" element={<ProfilePage />}/>\r\n          <Route path=\"/earnings\" element={<EarningsPage />}/>\r\n          <Route path=\"/create-payment-page\" element={<CreatePaymentPage />} />\r\n          <Route path=\"/edit-payment-page/:id\" element={<CreatePaymentPage />} />\r\n          <Route path=\"/payment-page-transactions/:id\" element={<PaymentPageTransactions />} />\r\n          <Route path=\"/payment/:id\" element={<PaymentPage />} />\r\n          <Route path=\"/thank-you\" element={<ThankYou />} />\r\n          <Route path=\"*\" element={<NotFound />} />\r\n        </Routes>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}